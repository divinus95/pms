@model SelectList
@{
    ViewData["Title"] = "Add Duty";
    Layout = "_FormsLayout";
}

<div class="main-container" id="container">

    <div class="overlay"></div>
    <div class="search-overlay"></div>

    <!--  BEGIN TOPBAR  -->
    <partial name="_MainNav" />
    <!--  END TOPBAR  -->
    <!--  BEGIN CONTENT AREA  -->
    <div id="content" class="main-content">
        <div class="container">
            <div class="container">

                <div id="navSection" data-spy="affix" class="nav  sidenav">
                    <div class="sidenav-content">
                        <a href="#flRegistrationForm" class="active nav-link">Assign Duties to Officers</a>
                    </div>
                </div>

                <form asp-controller="Admin" asp-action="AssignOfficer" method="post" enctype="multipart/form-data" id="AssignOfficer">
                    <div class="row">
                        <div id="flRegistrationForm" class="col-lg-12 layout-spacing">
                            <div class="statbox widget box box-shadow">
                                <div class="widget-header">
                                    <div class="row">
                                        <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                            <h4>Add Duty</h4>
                                        </div>
                                    </div>
                                </div>
                                <div class="widget-content widget-content-area">
                                    <div class="code-section-container">
                                        <div class="form-group mb-4">
                                            <label class="control-label">Duty</label>
                                            <select class="form-control visitor-matcher" name="Ids" asp-items="Model" id="rDutyId">
                                                <option value='0'>-- Select Type of Duty --</option>

                                            </select>
                                        </div>
                                        <div class="form-group mb-4">
                                            <label class="control-label">Officers</label>
                                            <select class="form-control visitor-matcher" name="Ids" asp-items="Model" id="rOfficer" multiple="multiple">
                                                <option value='0'>-- Select Officers --</option>

                                            </select>
                                        </div>
                                        <button type="submit" class="btn btn-primary mt-3" id="submitButton">Submit</button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

@section JsScript{
    <script src="~/js/toastr.js"></script>
    <script src="~/js/select2-min.js"></script>
    <script src="~/js/site.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#rOfficer").select2();
        });
    </script>
    <script type="text/javascript">
        $(function () {
            $("#rDutyId").select2();
        });
    </script>
    <script type="text/javascript">


        function matchCustom(params, data) {
            // If there are no search terms, return all of the data
            if ($.trim(params.term) === '') {
                return data;
            }

            // Do not display the item if there is no 'text' property
            if (typeof data.text === 'undefined') {
                return null;
            }

            // `params.term` should be the term that is used for searching
            // `data.text` is the text that is displayed for the data object
            if (data.text.indexOf(params.term) > -1) {
                var modifiedData = $.extend({}, data, true);
                modifiedData.text += ' (matched)';

                // You can return modified objects from here
                // This includes matching the `children` how you want in nested data sets
                return modifiedData;
            }

            // Return `null` if the term should not be displayed
            return null;
        }

        $(".visitor-matcher").select2({
            matcher: matchCustom
        });
    </script>
}